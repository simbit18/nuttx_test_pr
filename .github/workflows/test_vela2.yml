name: Build2 of NuttX on MSYS2

permissions:
  ## Allow publishing of GitHub Release
  contents: write
on: 
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/test_vela2.yml'
env:
   ARM_URL: https://developer.arm.com/-/media/Files/downloads/gnu/13.2.Rel1/binrel/
   ARM_NAME: arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-aarch64-none-elf #arm-gnu-toolchain-12.3.rel1-mingw-w64-i686-arm-none-eabi
   ARM_VELA_URL: https://github.com/open-vela/prebuilts_gcc_windows-x86_64_aarch64-none-elf.git
   ARM_VELA_NAME: armvela
   KCONFIG_FRONTENDS_URL: https://github.com/simbit18/kconfig-frontends-windows-mingw64/releases/download/kconfig-frontends-dev-4.11.1/
   KCONFIG_FRONTENDS_NAME: kconfig-frontends-windows-dev-mingw64
   CP_KCONFIG_FRONTENDS_NAME: kconfig-frontends-windows-mingw64
   GCC_URL: https://github.com/brechtsanders/winlibs_mingw/releases/download/15.1.0posix-13.0.0-msvcrt-r4/
   GCC_NAME: winlibs-x86_64-posix-seh-gcc-15.1.0-mingw-w64msvcrt-13.0.0-r4
   # https://github.com/brechtsanders/winlibs_mingw/releases/download/15.1.0posix-13.0.0-msvcrt-r4/winlibs-x86_64-posix-seh-gcc-15.1.0-mingw-w64msvcrt-13.0.0-r4.zip

jobs:
  nuttx-arm-msys2:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: false
          install: >-
            base-devel
            gperf
            automake
            autoconf
            git
            python3
            ncurses-devel
            unzip
            zip
            tio
            zlib-devel
            cmake
            ninja
            python-pip 
            vim

      - name: pip3 install
        run: |
          echo 'pip3 install'
          python3 -m venv --system-site-packages /usr/local
          pip3 install --root-user-action=ignore --no-cache-dir pyelftools cxxfilt kconfiglib

      # - name: Install kconfig-frontends
        # run: |
          # echo 'Install kconfig-frontends'
          # curl -L https://bitbucket.org/nuttx/tools/get/master.tar.gz -o nuttx-tools.tar.gz
          # mkdir nuttx-tools
          # tar xvzf nuttx-tools.tar.gz --strip-components=1 -C nuttx-tools
          # cd nuttx-tools/kconfig-frontends
          # ./configure --prefix=/opt/nuttxenv/usr --enable-mconf --disable-gconf --disable-qconf --disable-shared --disable-nconf
          # make install

      # - name: Install genromfs
        # run: |
          # echo 'Install genromfs'
          # cd nuttx-tools
          # tar xzf genromfs-0.5.2.tar.gz
          # cd genromfs-0.5.2
          # make install PREFIX=/opt/nuttxenv

      # - name: Copy NXTOOL GENROMFS and clean source files
        # run: |
          # echo 'Copy NXTOOL GENROMFS and clean source files'
          # cp /opt/nuttxenv/usr/bin/kconfig-conf.exe /usr/bin
          # cp /opt/nuttxenv/usr/bin/kconfig-mconf.exe /usr/bin
          # cp /opt/nuttxenv/usr/bin/kconfig-tweak /usr/bin
          # cp /opt/nuttxenv/usr/bin/genromfs.exe /usr/bin
          # rm -rf nuttx-tools genromfs-0.5.2

      - name: Install arm kconfig-frontends for Windows
        run: |   
           curl -L ${{ env.KCONFIG_FRONTENDS_URL }}${{ env.KCONFIG_FRONTENDS_NAME }}.zip -o ${{ env.KCONFIG_FRONTENDS_NAME }}.zip
           unzip -qo ${{ env.KCONFIG_FRONTENDS_NAME }}.zip
           mkdir -p /opt/nuttxenv/usr
          
           cp -ar ${{ env.CP_KCONFIG_FRONTENDS_NAME }}/* /opt/nuttxenv/usr
           ls -a
           rm -rf ${{ env.CP_KCONFIG_FRONTENDS_NAME }}
           rm ${{ env.KCONFIG_FRONTENDS_NAME }}.zip
           ls -a /opt/nuttxenv/usr

      - name: Install GCC for Windows
        run: |   
           curl -L ${{ env.GCC_URL }}${{ env.GCC_NAME }}.zip -o ${{ env.GCC_NAME }}.zip
           unzip -qo ${{ env.GCC_NAME }}.zip
           mkdir -p /opt/nuttxenv/usr

           cp -ar ${{ env.GCC_NAME }}/* /opt/nuttxenv/usr
           mv /opt/nuttxenv/usr/mingw64/bin/mingw32-make.exe /opt/nuttxenv/usr/mingw64/bin/make.exe
           mv /opt/nuttxenv/usr/mingw64/bin/cmake.exe /opt/nuttxenv/usr/mingw64/bin/123cmake.exe
           rm -rf ${{ env.GCC_NAME }}
           rm ${{ env.GCC_NAME }}.zip
           ls -a /opt/nuttxenv/usr/mingw64/bin

      - name: Install arm toolchain for Windows
        run: |   
           curl -L ${{ env.ARM_URL }}${{ env.ARM_NAME }}.zip -o ${{ env.ARM_NAME }}.zip
           unzip -qo ${{ env.ARM_NAME }}.zip
           mkdir -p /opt/nuttxenv/usr

           cp -ar ${{ env.ARM_NAME }}/* /opt/nuttxenv/usr
           rm -rf ${{ env.ARM_NAME }}
           rm ${{ env.ARM_NAME }}.zip
           ## ls -a /opt/nuttxenv/usr

      - name: Create PATH environment arm support script
        run: |
           mkdir -p nuttxenv
           echo "#!/usr/bin/env bash" > nuttxenv/arm
           echo "PATH=/opt/nuttxenv/usr/mingw64/bin:/opt/nuttxenv/usr/bin:"'${PATH}' >> nuttxenv/arm
           echo "export PATH" >> nuttxenv/arm

      - run: git config --global core.autocrlf false
      - name: Checkout Source Files
        run: |
          echo 'Checkout Source Files'
          mkdir nuttxspace
          ## ls -a
          cd nuttxspace
          # git clone --depth 1 https://github.com/simbit18/nuttx.git nuttx
          git clone --depth 1 https://github.com/zhangshanmin/nuttx.git nuttx
          git clone --depth 1 https://github.com/apache/nuttx-apps.git apps
          ## cd nuttx
          ## ls -a

      - name: Build
        run: |
          echo 'Build'
          source nuttxenv/arm
          export CROSSDEV=aarch64-none-elf-
          ## env
          
          ## Move to nuttx
          cd nuttxspace/nuttx
          ## ls -a

          ## Show the GCC version
          aarch64-none-elf-gcc --version
          aarch64-none-elf-c++ --version

          ## Configure the build
          ./tools/configure.sh -g qemu-armv8a:nsh

           ## Enable and set
          kconfig-tweak --enable CONFIG_LIBC_LOCALE
          kconfig-tweak --set-val CONFIG_TLS_NELEM 8
          kconfig-tweak --set-val CONFIG_TLS_TASK_NELEM 8
          kconfig-tweak --enable CONFIG_LIBCXX
          kconfig-tweak --enable CONFIG_LIBCXXABI
          kconfig-tweak --set-str CONFIG_LIBCXX_VERSION "17.0.6"
          kconfig-tweak --set-str CONFIG_LIBCXXABI_VERSION "17.0.6"
          kconfig-tweak --set-str CONFIG_CXX_STANDARD "gnu++20"
          kconfig-tweak --enable CONFIG_CXX_WCHAR
          kconfig-tweak --enable CONFIG_CXX_LOCALIZATION
          kconfig-tweak --enable CONFIG_TESTING_CXXTEST

          # CONFIG_LIBC_LOCALE=y
          # CONFIG_TLS_NELEM=8
          # CONFIG_TLS_TASK_NELEM=8
          # CONFIG_LIBCXX=y
          # CONFIG_LIBCXXABI=y
          # CONFIG_CXX_STANDARD="gnu++20"
          # CONFIG_CXX_WCHAR=y
          # CONFIG_CXX_LOCALIZATION=y
          # CONFIG_TESTING_CXXTEST=y

          mkdir nuttxmsys2

          ## Preserve the build config
          cp .config nuttxmsys2/nuttx.config

          ## Run the build
          make

          ## Show the size
          aarch64-none-elf-size nuttx

          ## Dump the disassembly to nuttx.S
          aarch64-none-elf-objdump \
          -t -S --demangle --line-numbers --wide \
          nuttx \
          >nuttx.S \
          2>&1
          
          ## ls -a
          
          cp nuttx nuttxmsys2/nuttx
          cp nuttx.bin nuttxmsys2/nuttx.bin
          cp nuttx.S nuttxmsys2/nuttx.S
          cp nuttx.hex nuttxmsys2/nuttx.hex

          zip -r msys2_qemu-armv8a_nsh.zip nuttxmsys2
          
      - name: Get Current Date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Publish the GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: msys2_qemu-armv8a_nsh-${{ steps.date.outputs.date }}
          draft: false
          prerelease: false
          generate_release_notes: false
          files: |
            nuttxspace/nuttx/msys2_qemu-armv8a_nsh.zip

  nuttx-vela-msys2:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: false
          install: >-
            base-devel
            gcc
            gperf
            automake
            autoconf
            git
            python3
            ncurses-devel
            unzip
            zip
            tio
            zlib-devel
            cmake
            ninja
            python-pip 
            vim

      - name: pip3 install
        run: |
          echo 'pip3 install'
          python3 -m venv --system-site-packages /usr/local
          pip3 install --root-user-action=ignore --no-cache-dir pyelftools cxxfilt kconfiglib

      - name: Install kconfig-frontends
        run: |
          echo 'Install kconfig-frontends'
          curl -L https://bitbucket.org/nuttx/tools/get/master.tar.gz -o nuttx-tools.tar.gz
          mkdir nuttx-tools
          tar xvzf nuttx-tools.tar.gz --strip-components=1 -C nuttx-tools
          cd nuttx-tools/kconfig-frontends
          ./configure --prefix=/opt/nuttxenv/usr --enable-mconf --disable-gconf --disable-qconf --disable-shared --disable-nconf
          make install

      - name: Install genromfs
        run: |
          echo 'Install genromfs'
          cd nuttx-tools
          tar xzf genromfs-0.5.2.tar.gz
          cd genromfs-0.5.2
          make install PREFIX=/opt/nuttxenv

      - name: Copy NXTOOL GENROMFS and clean source files
        run: |
          echo 'Copy NXTOOL GENROMFS and clean source files'
          cp /opt/nuttxenv/usr/bin/kconfig-conf.exe /usr/bin
          cp /opt/nuttxenv/usr/bin/kconfig-mconf.exe /usr/bin
          cp /opt/nuttxenv/usr/bin/kconfig-tweak /usr/bin
          cp /opt/nuttxenv/usr/bin/genromfs.exe /usr/bin
          rm -rf nuttx-tools genromfs-0.5.2
          
      - name: Install arm toolchain for Windows
        run: |   
           # curl -L ${{ env.ARM_URL }}${{ env.ARM_NAME }}.zip -o ${{ env.ARM_NAME }}.zip
           git clone --depth 1 ${{ env.ARM_VELA_URL }} ${{ env.ARM_VELA_NAME }}
           # unzip -qo ${{ env.ARM_NAME }}.zip
           mkdir -p /opt/nuttxenv/usr
          
           cp -ar ${{ env.ARM_VELA_NAME }}/* /opt/nuttxenv/usr
           rm -rf ${{ env.ARM_VELA_NAME }}
           # rm ${{ env.ARM_NAME }}.zip
           ls -a /opt/nuttxenv/usr

      - name: Create PATH environment arm support script
        run: |
           mkdir -p nuttxenv
           echo "#!/usr/bin/env bash" > nuttxenv/arm
           echo "PATH=/opt/nuttxenv/usr/bin:"'${PATH}' >> nuttxenv/arm
           echo "export PATH" >> nuttxenv/arm

      - run: git config --global core.autocrlf false
      - name: Checkout Source Files
        run: |
          echo 'Checkout Source Files'
          mkdir nuttxspace
          ## ls -a
          cd nuttxspace
          # git clone --depth 1 https://github.com/simbit18/nuttx.git nuttx
          git clone --depth 1 https://github.com/zhangshanmin/nuttx.git nuttx
          git clone --depth 1 https://github.com/apache/nuttx-apps.git apps
          ## cd nuttx
          ## ls -a

      - name: Build
        run: |
          echo 'Build'
          source nuttxenv/arm
          export CROSSDEV=aarch64-none-elf-
          ## env
          
          ## Move to nuttx
          cd nuttxspace/nuttx
          ## ls -a

          ## Show the GCC version
          aarch64-none-elf-gcc --version
          aarch64-none-elf-c++ --version

          ## Configure the build
          ./tools/configure.sh -g qemu-armv8a:nsh

           ## Enable and set
          kconfig-tweak --enable CONFIG_LIBC_LOCALE
          kconfig-tweak --set-val CONFIG_TLS_NELEM 8
          kconfig-tweak --set-val CONFIG_TLS_TASK_NELEM 8
          kconfig-tweak --enable CONFIG_LIBCXX
          kconfig-tweak --enable CONFIG_LIBCXXABI
          kconfig-tweak --set-str CONFIG_LIBCXX_VERSION "17.0.6"
          kconfig-tweak --set-str CONFIG_LIBCXXABI_VERSION "17.0.6"
          kconfig-tweak --set-str CONFIG_CXX_STANDARD "gnu++20"
          kconfig-tweak --enable CONFIG_CXX_WCHAR
          kconfig-tweak --enable CONFIG_CXX_LOCALIZATION
          kconfig-tweak --enable CONFIG_TESTING_CXXTEST

          # CONFIG_LIBC_LOCALE=y
          # CONFIG_TLS_NELEM=8
          # CONFIG_TLS_TASK_NELEM=8
          # CONFIG_LIBCXX=y
          # CONFIG_LIBCXXABI=y
          # CONFIG_CXX_STANDARD="gnu++20"
          # CONFIG_CXX_WCHAR=y
          # CONFIG_CXX_LOCALIZATION=y
          # CONFIG_TESTING_CXXTEST=y

          mkdir nuttxmsys2

          ## Preserve the build config
          cp .config nuttxmsys2/nuttx.config

          ## Run the build
          make

          ## Show the size
          aarch64-none-elf-size nuttx
